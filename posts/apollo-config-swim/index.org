#+BEGIN_COMMENT
.. title: Apollo 配置中心畅游
.. slug: apollo-config-swim
.. date: 2019-05-09 17:34:09 UTC+08:00
.. tags: 
.. category: 
.. link: 
.. description: 
.. type: text

#+END_COMMENT

** Apollo开源配置中心分享
   :PROPERTIES:
   :ID:       56D30D0F-FF09-4415-B787-DE1E71B89525
   :END:
*** 目前市面上的开源产品
    :PROPERTIES:
    :ID:       24469E90-D66B-46C3-8111-273DC545ED9C
    :END:
**** [[https://github.com/knightliao/disconf][Disconf]]
     :PROPERTIES:
     :ID:       A8F19C10-24A4-462A-A278-3CC6866B6104
     :END:
     2014年7月百度开源的配置管理中心，同样具备配置的管理能力，目前已经不维护了，最近的一次代码提交是两年前了。
**** [[https://github.com/spring-cloud/spring-cloud-config][Spring Cloud Config]]
     :PROPERTIES:
     :ID:       A1015FF2-133D-4C64-BFB3-8A9E027D1D19
     :END:
2014年9月开源，Spring Cloud生态组件，与Spring Cloud体系无缝整合。
**** [[https://github.com/ctripcorp/apollo][Apollo]]
     :PROPERTIES:
     :ID:       09F80DD2-2794-40E6-A443-2F4868166899
     :END:
2016年5月，携程框架部开源的配置管理中心，具备规范的权限、流程治理等特性。
**** [[https://github.com/alibaba/nacos][Nacos]]
     :PROPERTIES:
     :ID:       A38D7032-C1A2-4C94-A771-E23ACE4B13F4
     :END:
2018年6月，阿里开源的配置中心，可以做DNS和RPC的服务发现。
*** 为什么选择Apollo
    :PROPERTIES:
    :ID:       93AD45B7-443A-4A92-8F7F-DBE208D9D995
    :END:
**** 社区活跃
     :PROPERTIES:
     :ID:       8B50A2C7-E400-4B1C-8C89-1E0FAD78C732
     :END:
     刚刚发布了[[https://github.com/ctripcorp/apollo/releases/tag/v1.4.0][1.4.0]]版本，Issue处理速度快
**** 文档齐全
     :PROPERTIES:
     :ID:       1F051A4F-9F86-494A-BE3D-CBF0568D9B13
     :END:
     体验，部署，设计文档都齐全
**** 重要的灰度发布
     :PROPERTIES:
     :ID:       3D3ED757-D257-4CC3-84B8-0752F4ACD983
     :END:
     想发布一台机器试试水，可以！
**** 开源协议友好
     :PROPERTIES:
     :ID:       7A92103D-AFF4-4204-A8FC-CC0464E298D4
     :END:
     Apache 2 license
{{{TEASER_END}}}
*** Apollo都有哪些重要功能
    :PROPERTIES:
    :ID:       0C1321E8-8D2E-495E-A1BB-65AC031794B3
    :END:
    以下摘自[[https://github.com/ctripcorp/apollo#features][官网说明]]
**** 统一管理不同环境、不同集群的配置
     :PROPERTIES:
     :ID:       1643865B-0EF0-402F-B47E-0E21099A8FAC
     :END:
**** 配置修改实时生效（热发布）
     :PROPERTIES:
     :ID:       B7E2092D-B527-4592-A087-C74EAC86377C
     :END:
**** 版本发布管理
     :PROPERTIES:
     :ID:       90C41B7F-0B4B-4DB8-9CF2-02828BDA6DE0
     :END:
     目前只支持对最近版本的恢复。[[https://github.com/ctripcorp/apollo/issues/1642][https://github.com/ctripcorp/apollo/issues/1642]]
**** 灰度发布
     :PROPERTIES:
     :ID:       BAEB34A8-6C80-4BFB-8CBC-41572072A260
     :END:
**** 权限管理、发布审核、操作审计
     :PROPERTIES:
     :ID:       892929BB-D7E2-41B2-B198-D0C6F6C3B0A8
     :END:
     编辑与发布是两个独立的操作。
**** 客户端配置信息监控
     :PROPERTIES:
     :ID:       0227ED14-7754-4EF9-9579-11615DDB0609
     :END:
**** 提供Java和.Net原生客户端
     :PROPERTIES:
     :ID:       35EE8191-FF3C-4778-8BFA-4AF5444B9048
     :END:
**** 提供开放平台API
     :PROPERTIES:
     :ID:       DECAE90E-1C80-44FD-B2C2-0B62A54E50FB
     :END:
     这样可以通过其它方式来查看配置信息
**** 分布式部署相对较复杂，这是缺点
     :PROPERTIES:
     :ID:       242AAC61-471F-47DB-A4F5-08372C963A92
     :END:
     外部依赖少，目前依赖Mysql
**** 使用方便的后台配置系统Portal
     :PROPERTIES:
     :ID:       0D846262-4FC3-4ED7-9BD6-8DF85489F13C
     :END:
*** Apollo的组成
    :PROPERTIES:
    :ID:       AC32230B-1CCE-4CFC-806F-6F8FE3A70783
    :END:
**** Apollo长什么样?
     :PROPERTIES:
     :ID:       920AD4AB-F81D-4BF4-A696-4C7F730AE8B3
     :END:
     img-url:/images/apollo-home-screenshot.png
     [[file:/Users/tomyli/github/blog/images/apollo-home-screenshot.png][/Users/tomyli/github/blog/images/apollo-home-screenshot.png]]
**** Apollo整体设计 
     :PROPERTIES:
     :ID:       62516B1E-749F-46F5-9713-A138EACCF95B
     :END:
     img-url:/images/overall-architecture.png
    [[file:/Users/tomyli/github/blog/images/overall-architecture.png][/Users/tomyli/github/blog/images/overall-architecture.png]] 

     总体架构

     img-url:/images/apollo-code-structure.png
     [[file:/Users/tomyli/github/blog/images/apollo-code-structure.png][/Users/tomyli/github/blog/images/apollo-code-structure.png]]

     代码结构

     https://github.com/ctripcorp/apollo/wiki/Apollo配置中心设计#13-各模块概要介绍

**** Apollo Config Service
     :PROPERTIES:
     :ID:       EFC7B929-48E3-430E-B9D6-DDF4BB67A0A0
     :END:
     提供配置获取接口，服务对象为Apollo客户端
**** Apollo Admin Service
     :PROPERTIES:
     :ID:       62CDB9D8-D64A-43D6-9768-900A1CDA9DCD
     :END:
     提供配置管理（修改、发布）接口，服务与Portal
**** Apollo Portal
     :PROPERTIES:
     :ID:       C54CBBC7-88AF-4A4C-A4A5-00FF7C8F3A40
     :END:
     提供WEB界面供用户管理配置
*** Apollo的重要设计
    :PROPERTIES:
    :ID:       2ECAA60E-CDEC-4156-9FFC-04A2875B3C1E
    :END:
**** Admin Service与Config Service的通信方式
     :PROPERTIES:
     :ID:       90F032EB-378F-4447-A244-0E4B9321C0F4
     :END:
     Apollo使用Mysql实现消息(ReleaseMessage)的处理，消息内容为AppId+Cluster+Namespace
     [[file:~/github/apollo/doc/images/release-message-design.png][ReleaseMessage]]
     [[https://github.com/ctripcorp/apollo/wiki/Apollo%25E9%2585%258D%25E7%25BD%25AE%25E4%25B8%25AD%25E5%25BF%2583%25E8%25AE%25BE%25E8%25AE%25A1#211-%25E5%258F%2591%25E9%2580%2581releasemessage%25E7%259A%2584%25E5%25AE%259E%25E7%258E%25B0%25E6%2596%25B9%25E5%25BC%258F][https://github.com/ctripcorp/apollo/wiki/Apollo%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E8%AE%BE%E8%AE%A1#211-%E5%8F%91%E9%80%81releasemessage%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F]]
**** 客户端与服务端的通信方式
     :PROPERTIES:
     :ID:       BE21C115-40BE-4E4C-BC83-E444B7BEACE6
     :END:
     客户端与服务端保持一个长连接(通过Http Long Polling实现)
     [[file:~/github/apollo/doc/images/client-architecture.png][Client Server]]
**** 重要的Namespace
     :PROPERTIES:
     :ID:       D278B193-F25B-4C7F-A063-5C5DD2EA6041
     :END:
     Namespace是配置项的集合，类似于一个配置文件的概念，获取的权限分为private与public两种权限。
***** Namespace的类型
      :PROPERTIES:
      :ID:       80D21C9D-25F8-48E8-A629-753757697AD9
      :END:
      - 私有类型
      - 公有类型
      - 关联类型（继承类型）
**** Cluster能用来做什么?
     :PROPERTIES:
     :ID:       7999356A-1E22-424D-A577-81EE1EECCA14
     :END:
     分机房实例，分任务功能实例，比如现在的一些实例执行job，需要增加-Dapollo.cluster=配置指定集群名
*** 体验部署方式
    :PROPERTIES:
    :ID:       9BA86A7E-AD18-4162-BFA6-8C04AE88AD9C
    :END:
    Docker，本地源代码，虚拟机多环境
*** 使用注意事项
    :PROPERTIES:
    :ID:       CED3F392-CA50-497B-8253-971664F19DBF
    :END:
    - 在主版本有未发布的配置项时，要发布灰度后的全量则需要先把主版本中的配置发布后方可操作
    - 使用docker运行demo测试时连接不上docker中的服务解决方法：https://github.com/ctripcorp/apollo/issues/1481#issuecomment-422057411w
    - /opt目录要有读写权限，日志文件默认打印在此目录
    - 线上环境配置建议配置在机器上，不建议配置在代码中，与代码解耦
    - config与admin service要开放端口8080与8090(默认情况下)，端口可以在项目中的starup.sh中修改
    - 如果Config Service配置开启了内存缓存数据(config-service.cache.enabled)，要提前考虑数据量的大小，调整服务的内存配置
*** 参考文档
    :PROPERTIES:
    :ID:       8D01547C-7A70-4520-9E93-4820385D31CD
    :END:
    https://github.com/ctripcorp/apollo

    https://github.com/alibaba/nacos 
    
    http://dockone.io/article/8767
